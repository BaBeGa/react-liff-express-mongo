{"version":3,"sources":["logo.svg","HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","props","state","user","name","email","userLineID","pictureUrl","statusMessage","serializedState","localStorage","getItem","this","JSON","parse","console","log","setState","getUser","className","width","src","Component","liff","window","App","getList","fetch","then","res","json","init","liffId","a","isLoggedIn","getProfile","userProfile","getDecodedIDToken","idToken","displayName","userId","saveUser","login","stringify","setItem","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ed979aa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import{ Component } from 'react';\r\nimport './HomePage.css';\r\n\r\nclass HomePage extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n              name: '',\r\n              email: '',\r\n              userLineID: '',\r\n              pictureUrl: '',\r\n              statusMessage: ''\r\n            }\r\n        };\r\n    }\r\n\r\n    getUser(){\r\n        let serializedState = localStorage.getItem('user');\r\n        if(serializedState){\r\n        this.user = JSON.parse(serializedState);\r\n        }\r\n        console.log('getuser: ', this.user);\r\n        this.setState({user : this.user});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUser()\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div className=\"App\">\r\n            <div className=\"support\">\r\n                {\r\n                  (this.state.user.pictureUrl && this.state.user.pictureUrl !== '')\r\n                    ?\r\n                    <img width=\"25%\" src={this.state.user.pictureUrl} />\r\n                    :\r\n                    <p>pictureUrl = null</p>\r\n                }\r\n            </div>\r\n            <div className=\"userData\">\r\n              {\r\n                (this.state.user.name && this.state.user.name !== '')\r\n                  ?\r\n                  <p>Name: {this.state.user.name}</p>\r\n                  :\r\n                  <p>Name = null</p>\r\n              }\r\n              {\r\n                (this.state.user.email && this.state.user.email !== '')\r\n                  ?\r\n                  <p>e-mail: {this.state.user.email}</p>\r\n                  :\r\n                  <p>email = null</p>\r\n              }\r\n              {\r\n                (this.state.user.userLineID && this.state.user.userLineID !== '')\r\n                  ?\r\n                  <p>LineID: {this.state.user.userLineID}</p>\r\n                  :\r\n                  <p>LineID = null</p>\r\n              }\r\n              {\r\n                (this.state.user.statusMessage && this.state.user.statusMessage !== '')\r\n                  ?\r\n                  <p>statusMessage: {this.state.user.statusMessage}</p>\r\n                  :\r\n                  <p>statusMessage = null</p>\r\n              }\r\n              </div>\r\n        </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default HomePage;","import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport './App.css';\nimport HomePage from './HomePage';\n\nconst liff = window.liff;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        name: '',\n        email: '',\n        userLineID: '',\n        pictureUrl: '',\n        statusMessage: ''\n      }\n    };\n  }\n\n\n  getList = () => {\n    fetch('/api/getList')\n    .then(res => res.json())\n    .then(user => this.setState({ user : user }))\n  }\n\n  getProfile() {\n    let serializedState = localStorage.getItem('user');\n    if(serializedState){\n      this.user = JSON.parse(serializedState);\n    }\n    this.setState({user: this.user});\n    console.log('user : ', this.user);\n    if(!this.user){\n      liff.init({ liffId: \"1655424183-wzDgvLRj\" } ,async () => {\n        if (liff.isLoggedIn()) {\n          let userProfile = await liff.getProfile();\n          let idToken = await liff.getDecodedIDToken();\n          this.setState({\n            user : {\n              name: userProfile.displayName,\n              email: idToken.email,\n              userLineID: userProfile.userId,\n              pictureUrl: userProfile.pictureUrl,\n              statusMessage: userProfile.statusMessage\n            }\n          });\n  \n          this.saveUser();\n        } else {\n          liff.login();\n        }\n      });\n    }\n  }\n\n  saveUser(){\n    let serializedState = JSON.stringify(this.state.user);\n    localStorage.setItem('user', serializedState);\n  }\n\n  componentDidMount() {\n    this.getProfile()\n  }\n\n  render(){\n    if(this.user){\n      return(\n        <div>\n          <HomePage/>\n        </div>\n      );\n    }\n    else{\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <p>\n              Edit <code>src/App.js</code> and save to reload.\n            </p>\n            <a\n              className=\"App-link\"\n              href=\"https://reactjs.org\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Learn React\n            </a>\n          </header>\n          <div className=\"support\">\n              {\n                (this.state.user.pictureUrl && this.state.user.pictureUrl !== '')\n                  ?\n                  <img width=\"25%\" src={this.state.user.pictureUrl} />\n                  :\n                  <p>pictureUrl = null</p>\n              }\n          </div>\n          <div className=\"userData\">\n            {\n              (this.state.user.name && this.state.user.name !== '')\n                ?\n                <p>Name: {this.state.user.name}</p>\n                :\n                <p>Name = null</p>\n            }\n            {\n              (this.state.user.email && this.state.user.email !== '')\n                ?\n                <p>e-mail: {this.state.user.email}</p>\n                :\n                <p>email = null</p>\n            }\n            {\n              (this.state.user.userLineID && this.state.user.userLineID !== '')\n                ?\n                <p>LineID: {this.state.user.userLineID}</p>\n                :\n                <p>LineID = null</p>\n            }\n            {\n              (this.state.user.statusMessage && this.state.user.statusMessage !== '')\n                ?\n                <p>statusMessage: {this.state.user.statusMessage}</p>\n                :\n                <p>statusMessage = null</p>\n            }\n            </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}